{"name":"Tenso","tagline":"Tensō is a REST framework for node.js","body":"Tensō\r\n=====\r\n\r\nTensō is a REST framework for node.js, designed to simplify the implementation of APIs.\r\n\r\n## Example\r\nCreating an API with Tensō is as simple as three statements.\r\n\r\n```javascript\r\n\"use strict\";\r\n\r\nvar tenso = require( \"tenso\" ),\r\n    app   = tenso( {routes: \"routes.js\"} );\r\n```\r\n\r\n## Creating Routes\r\nRoutes are loaded as a module, with each HTTP method as an export, affording a very customizable API server. The following example will create GET routes that will return an empty `Array` at `/`, an `Error` at `/reports/tps`, & a random number at `/random`.\r\n\r\n```javascript\r\nvar random  = require( \"keigai\" ).util.number.random,\r\n    prepare = require( \"tenso\" ).prepare;\r\n\r\nmodule.exports.get = {\r\n\t\"/\": [],\r\n\t\"/reports/tps\": function ( req, res ) {\r\n\t\tthis.respond( req, res, prepare( null, new Error( \"TPS Cover Sheet not attached\" ), 785 ), 785 );\r\n\t},\r\n\t\"/random\": function ( req, res ) {\r\n\t\tthis.respond( req, res, prepare( random() ) );\r\n\t}\r\n}\r\n```\r\n\r\n## Configuration\r\nThis is a sample configuration for Tensō, without authentication or SSL. This would be ideal for development, but not production! Enabling is as easy as providing file paths for the two keys.\r\n\r\n```json\r\n{\r\n\t\"hostname\": \"localhost\",\r\n\t\"pageSize\": 5,\r\n\t\"port\": 8000,\r\n\t\"routes\": \"routes.js\",\r\n\t\"log\": {\r\n\t\t\"dtrace\": false,\r\n\t\t\"syslog\": false\r\n\t},\r\n\t\"ssl\": {\r\n\t\t\"key\": null,\r\n\t\t\"cert\": null\r\n\t}\r\n}\r\n```\r\n\r\n## License\r\nCopyright (c) 2014 Jason Mulligan  \r\nLicensed under the BSD-3 license.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}